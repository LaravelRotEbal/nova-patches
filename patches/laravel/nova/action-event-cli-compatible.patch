@package laravel/nova

--- src/Http/Controllers/AttachedResourceUpdateController.php	(date 1577352859767)
+++ src/Http/Controllers/AttachedResourceUpdateController.php	(date 1577352859767)
@@ -8,6 +8,7 @@
 use Illuminate\Support\Facades\Validator;
 use Laravel\Nova\Actions\ActionEvent;
 use Laravel\Nova\Http\Requests\NovaRequest;
+use Laravel\Nova\Nova;

 class AttachedResourceUpdateController extends Controller
 {
@@ -36,7 +37,8 @@

             [$pivot, $callbacks] = $resource::fillPivot($request, $model, $pivot);

-            ActionEvent::forAttachedResourceUpdate($request, $model, $pivot)->save();
+            $target = Nova::modelInstanceForKey($request->relatedResource)->find($pivot[$pivot->getRelatedKey()]);
+            ActionEvent::forAttachedResourceUpdate($request->user(), $model, $target, $pivot)->save();

             $pivot->save();


--- src/Http/Controllers/PivotFieldDestroyController.php	(date 1577352859774)
+++ src/Http/Controllers/PivotFieldDestroyController.php	(date 1577352859774)
@@ -24,8 +24,7 @@
             $pivot = $request->findPivotModel()
         )->save();

-        ActionEvent::forAttachedResourceUpdate(
-            $request, $request->findModelOrFail(), $pivot
-        )->save();
+        $target = Nova::modelInstanceForKey($request->relatedResource)->find($pivot[$pivot->getRelatedKey()]);
+        ActionEvent::forAttachedResourceUpdate($request->user(), $request->findModelOrFail(), $target, $pivot)->save();
     }
 }


--- src/Http/Controllers/ResourceAttachController.php	(date 1577353805001)
+++ src/Http/Controllers/ResourceAttachController.php	(date 1577353805001)
@@ -8,6 +8,7 @@
 use Illuminate\Support\Facades\Validator;
 use Laravel\Nova\Actions\ActionEvent;
 use Laravel\Nova\Http\Requests\NovaRequest;
+use Laravel\Nova\Nova;

 class ResourceAttachController extends Controller
 {
@@ -31,7 +32,8 @@
                 )
             );

-            ActionEvent::forAttachedResource($request, $model, $pivot)->save();
+            $target = Nova::modelInstanceForKey($request->relatedResource)->find($pivot[$pivot->getRelatedKey()]);
+            ActionEvent::forAttachedResource($request->user(), $model, $target, $pivot)->save();

             $pivot->save();



--- src/Actions/ActionEvent.php	(date 1577353836521)
+++ src/Actions/ActionEvent.php	(date 1577353836521)
@@ -110,21 +110,22 @@
     /**
      * Create a new action event instance for an attached resource.
      *
-     * @param  \Laravel\Nova\Http\Requests\NovaRequest  $request
+     * @param  \Illuminate\Contracts\Auth\Authenticatable  $user
      * @param  \Illuminate\Database\Eloquent\Model  $parent
+     * @param  \Illuminate\Database\Eloquent\Model  $target
      * @param  \Illuminate\Database\Eloquent\Model  $pivot
      * @return \Illuminate\Database\Eloquent\Model
      */
-    public static function forAttachedResource(NovaRequest $request, $parent, $pivot)
+    public static function forAttachedResource($user, $parent, $target, $pivot)
     {
         return new static([
             'batch_id' => (string) Str::orderedUuid(),
-            'user_id' => $request->user()->getAuthIdentifier(),
+            'user_id' => $user->getAuthIdentifier(),
             'name' => 'Attach',
             'actionable_type' => $parent->getMorphClass(),
             'actionable_id' => $parent->getKey(),
-            'target_type' => Nova::modelInstanceForKey($request->relatedResource)->getMorphClass(),
-            'target_id' => $parent->getKey(),
+            'target_type' => $target->getMorphClass(),
+            'target_id' => $target->getKey(),
             'model_type' => $pivot->getMorphClass(),
             'model_id' => $pivot->getKey(),
             'fields' => '',
@@ -138,21 +139,22 @@
     /**
      * Create a new action event instance for an attached resource update.
      *
-     * @param  \Laravel\Nova\Http\Requests\NovaRequest  $request
+     * @param  \Illuminate\Contracts\Auth\Authenticatable  $user
      * @param  \Illuminate\Database\Eloquent\Model  $parent
+     * @param  \Illuminate\Database\Eloquent\Model  $target
      * @param  \Illuminate\Database\Eloquent\Model  $pivot
      * @return \Illuminate\Database\Eloquent\Model
      */
-    public static function forAttachedResourceUpdate(NovaRequest $request, $parent, $pivot)
+    public static function forAttachedResourceUpdate($user, $parent, $target, $pivot)
     {
         return new static([
             'batch_id' => (string) Str::orderedUuid(),
-            'user_id' => $request->user()->getAuthIdentifier(),
+            'user_id' => $user->getAuthIdentifier(),
             'name' => 'Update Attached',
             'actionable_type' => $parent->getMorphClass(),
             'actionable_id' => $parent->getKey(),
-            'target_type' => Nova::modelInstanceForKey($request->relatedResource)->getMorphClass(),
-            'target_id' => $request->relatedResourceId,
+            'target_type' => $target->getMorphClass(),
+            'target_id' => $target->getKey(),
             'model_type' => $pivot->getMorphClass(),
             'model_id' => $pivot->getKey(),
             'fields' => '',
